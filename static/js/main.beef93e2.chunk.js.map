{"version":3,"sources":["icons/plus.svg","icons/remove.svg","serviceWorker.js","componets/bottomSection.js","componets/TopSection.js","componets/App.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","bottomSection","activity","activityDisplay","bind","this","props","map","cur","className","style","color","completed","type","checked","onChange","eventHandler","id","onClick","deleteHandler","src","remove","React","Component","TopSection","activityStore","ChangeEvent","handelClick","completedCount","deleteEvent","ev","preventDefault","setState","prevState","currentTarget","parentElement","firstChild","value","activityObj","push","indexId","indexOf","splice","incomplete","complete","forEach","placeholder","add","length","key","MyInfo","ReactDOM","render","App","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.beef93e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.61c464b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.bd4ff3f5.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport remove from \"../icons/remove.svg\";\r\n\r\nclass bottomSection extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      activity: [],\r\n    };\r\n    this.activityDisplay = this.activityDisplay.bind(this);\r\n  }\r\n\r\n  activityDisplay() {\r\n    const displayArray = this.props.activity.map((cur) => {\r\n      return (\r\n        <div className=\"activity\">\r\n          <h5\r\n            className=\"firstChild\"\r\n            style={{ color: cur.completed ? \"lime\" : \"red\" }}\r\n          >\r\n            {cur.activity}\r\n          </h5>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={cur.completed}\r\n            onChange={() => {\r\n              this.props.eventHandler(cur.id);\r\n            }}\r\n          />\r\n          <button className=\"lastChild\" onClick={ () => this.props.deleteHandler(cur.id)}>\r\n            <img src={remove} />\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n    return displayArray;\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"activity-container\">{this.activityDisplay()}</div>;\r\n  }\r\n}\r\n\r\nexport default bottomSection;\r\n","import React from \"react\";\r\nimport add from \"../icons/plus.svg\";\r\nimport BottomSection from \"./bottomSection\";\r\nclass TopSection extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      activity: [],\r\n      id: 0,\r\n    };\r\n\r\n    this.ChangeEvent = this.ChangeEvent.bind(this);\r\n    this.handelClick = this.handelClick.bind(this);\r\n    this.completedCount = this.completedCount.bind(this);\r\n    this.deleteEvent = this.deleteEvent.bind(this);\r\n  }\r\n\r\n  activityStore = [];\r\n\r\n  handelClick(ev) {\r\n    ev.preventDefault();\r\n    this.setState((prevState) => {\r\n      return {\r\n        id: prevState.id + 1,\r\n      };\r\n    });\r\n\r\n    const activity = ev.currentTarget.parentElement.firstChild.value;\r\n    if (activity !== \"\") {\r\n      const activityObj = {\r\n        id: this.state.id,\r\n        activity: activity,\r\n        completed: false,\r\n      };\r\n      this.activityStore.push(activityObj);\r\n      this.setState((prevState) => {\r\n        return {\r\n          activity: this.activityStore,\r\n        };\r\n      });\r\n      ev.currentTarget.parentElement.firstChild.value = \"\";\r\n    }\r\n  }\r\n\r\n  ChangeEvent(id) {\r\n    this.setState((prevState) => {\r\n      const selected = prevState.activity.map((cur) => {\r\n        if (id === cur.id) {\r\n          cur.completed = !cur.completed;\r\n        }\r\n        return cur;\r\n      });\r\n      return {\r\n        activity: selected,\r\n      };\r\n    });\r\n  }\r\n\r\n  completedCount() {\r\n    if (this.state.activity !== \"undefined\") {\r\n      const countCompleted = this.state.activity.map((cur) => {\r\n        if (cur.completed === true) {\r\n          return cur;\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n      return countCompleted;\r\n    }\r\n  }\r\n\r\n  deleteEvent(id) {\r\n\r\n    const index = this.state.activity.map(cur => {\r\n      return cur.id\r\n    })\r\n\r\n    let indexId = index.indexOf(id) \r\n\r\n    this.setState(prevState => {\r\n       this.state.activity.splice(indexId,1)\r\n      return{\r\n        activity: this.state.activity\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const incomplete = [];\r\n    const complete = [];\r\n\r\n    const test = this.completedCount();\r\n\r\n    test.forEach((cur) => {\r\n      if (cur === null) {\r\n        incomplete.push(\"No\");\r\n      } else {\r\n        complete.push(\"Yes\");\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <div className=\"title\">\r\n            <h2>My Activity Pad</h2>\r\n          </div>\r\n          <form className=\"input-form\">\r\n            <input type=\"text\" placeholder=\"Enter Activity\" />\r\n            <button className=\"addBtn\" onClick={this.handelClick}>\r\n              {\" \"}\r\n              <img src={add} /> Add\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"status\">\r\n            <h5 className=\"completed\">\r\n              Completed: {complete.length} /{this.state.activity.length}\r\n            </h5>\r\n            <h5 className=\"incomplete\">Incomplete: {incomplete.length}</h5>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.activity !== \"undefined\" ? (\r\n          <BottomSection\r\n            key={this.state.activity.id}\r\n            activity={this.state.activity}\r\n            eventHandler={this.ChangeEvent}\r\n            deleteHandler = {this.deleteEvent}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopSection;\r\n","import React from \"react\";\r\nimport '../style/style.css'\r\nimport TopSection from './TopSection'\r\n\r\nfunction MyInfo() {\r\n  return (\r\n    <div className='container'>\r\n       <TopSection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyInfo;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from './componets/App'\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}